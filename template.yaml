AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An serverless application for the security self-test. This application executes a basic test about security and generates a report.

Parameters:
  Email:
    Type: "String"
    Description: "Please put into your available email to receive the result email"
  APIExpireDate:
    Description : "API Endpoint expiration date."
    Type : "String"
    Default : "2023-01-31T12:00:00+09:00"
    AllowedPattern : "^\\d{4}(-\\d{2}){2}[T](\\d{2}:){2}\\d{2}\\+09:00$"

Resources:
  AWSSecuritySelfTestBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True  

  AWSSecuritySelfTestExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: AWSSecuritySelfTestPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'sts:GetCallerIdentity'
                  - 'ec2:DescribeRegions'
                  - 'ec2:DescribeInstances'
                  - 'account:GetAlternateContact'
                  - 'iam:GenerateCredentialReport'
                  - 'iam:GetCredentialReport'
                  - 'iam:GetAccountPasswordPolicy'
                  - 'iam:ListUsers'
                  - 'iam:ListAttachedUserPolicies'
                  - 'iam:ListUserPolicies'
                  - 'cloudtrail:DescribeTrails'
                  - 'cloudtrail:GetTrailStatus'
                  - 'cloudtrail:GetTrail'
                  - 's3:GetAccountPublicAccessBlock'
                  - 's3:GetBucketPublicAccessBlock'
                  - 's3:ListBucket'
                  - 's3:ListAllMyBuckets'
                  - 's3:PutObject'
                  - 's3:DeleteObject'
                  - 'cloudwatch:DescribeAlarms'
                  - 'ec2:DescribeNetworkInterfaces'
                  - 'ec2:DescribeVpcs'
                  - 'ec2:DescribeSubnets'
                  - 'support:DescribeTrustedAdvisorChecks'
                  - 'guardduty:ListDetectors'
                  - 'guardduty:GetDetector'
                  - 'sns:Publish'
                  - 'lambda:InvokeFunction'
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: '*'
  AWSSecuritySelfTestBasicLambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: AWSSecuritySelfTestS3BucketandLambdaPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'sts:GetCallerIdentity'
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:DeleteObject'
                  - 'lambda:InvokeFunction'
                  - 'sns:Publish'
                  - 'sns:ListSubscriptionsByTopic'
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: '*'

  SnsTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !Ref Email
          Protocol: 'email'

  AWSSecuritySelfTestFunction:
    Type: AWS::Serverless::Function
    Properties:
      Role: !GetAtt AWSSecuritySelfTestExecutionRole.Arn
      CodeUri: sst/
      Handler: main.lambda_handler
      Runtime: python3.9
      Timeout: 600
      MemorySize: 256
      Environment: 
        Variables:
          Bucket: !GetAtt AWSSecuritySelfTestBucket.Arn
          EmailReport: !Ref AWSSecuritySelfTestSendEmailFunction
          Topic: !Ref SnsTopic
          TZ: 'Asia/Seoul'
      Architectures:
        - x86_64

  ApiGatewayEndpoint:
    Type: 'AWS::Serverless::Api'
    Properties:
      StageName: Prod
      Auth:
        ResourcePolicy:
          CustomStatements: {
              Effect: "Allow",
              Principal: "*",
              Action: "execute-api:Invoke",
              Resource: ['execute-api:/*/*/*'],
              Condition: {
                DateLessThan: {
                  "aws:CurrentTime": !Ref APIExpireDate
                }
              }
          }

  AWSSecuritySelfTestSendEmailFunction:
    Type: AWS::Serverless::Function
    Properties:
      Role: !GetAtt AWSSecuritySelfTestBasicLambdaExecutionRole.Arn
      CodeUri: send_email/
      Handler: lambda_function.lambda_handler
      Runtime: python3.9
      Timeout: 10
      Environment: 
        Variables:
          Bucket: !GetAtt AWSSecuritySelfTestBucket.Arn
          Topic: !Ref SnsTopic
          TZ: 'Asia/Seoul'
      Architectures:
        - x86_64

  AWSSecuritySelfTestEntryFunction:
    Type: AWS::Serverless::Function
    Properties:
      Role: !GetAtt AWSSecuritySelfTestBasicLambdaExecutionRole.Arn
      CodeUri: entry/
      Handler: lambda_function.lambda_handler
      Runtime: python3.9
      Timeout: 10
      Environment: 
        Variables:
          Bucket: !GetAtt AWSSecuritySelfTestBucket.Arn
          SST: !GetAtt AWSSecuritySelfTestFunction.Arn
          Topic: !Ref SnsTopic
          TZ: 'Asia/Seoul'
      Architectures:
        - x86_64
      Events:
        Report:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId:
                Ref: ApiGatewayEndpoint
            Path: /
            Method: get
  
Outputs:
  AWSSecuritySelfTestApi:
    Description: "API Gateway endpoint URL for Prod stage for AWS Security Self-Test(SST) function"
    Value: !Sub "https://${ApiGatewayEndpoint}.execute-api.${AWS::Region}.amazonaws.com/Prod/"

Metadata:
  AWS::ServerlessRepo::Application:
    Name: AWS-Security-Self-Test-Application
    Description: An serverless application that tests the AWS Security Self-Test(SST) and generates a HTML report.
    Author: AWS Korea Startup Team
    SpdxLicenseId: Apache-2.0
    LicenseUrl: LICENSE
    ReadmeUrl: README.md
    SemanticVersion: 1.1.7
